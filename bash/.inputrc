#My shell settings
#see help set,help bind ...
#https://www.gnu.org/software/bash/manual/html_node/Readline-Init-File-Syntax.html
#http://linux.about.com/library/cmd/blcmdl3_readline.htm

#Not possible shell functions here
#       keystrokes: "key":"keystrokes" or 'keystrokes'
# readline command: "key": readline macro


#VI Insert Mode functions
#"C-D"  vi-eof-maybe
#"C-H"  backward-delete-char
#"C-I"  complete
#"C-J"  accept-line
#"C-M"  accept-line
#"C-R"  reverse-search-history
#"C-S"  forward-search-history
#"C-T"  transpose-chars
#"C-U"  unix-line-discard
#"C-V"  quoted-insert
#"C-W"  unix-word-rubout
#"C-Y"  yank
#"C-["  vi-movement-mode
#"C-_"  undo
#" " to "~"  self-insert
#"C-?"  backward-delete-char
#
#VI Command Mode functions
#
#"C-D"  vi-eof-maybe
#"C-E"  emacs-editing-mode
#"C-G"  abort
#"C-H"  backward-char
#"C-J"  accept-line
#"C-K"  kill-line
#"C-L"  clear-screen
#"C-M"  accept-line
#"C-N"  next-history
#"C-P"  previous-history
#"C-Q"  quoted-insert
#"C-R"  reverse-search-history
#"C-S"  forward-search-history
#"C-T"  transpose-chars
#"C-U"  unix-line-discard
#"C-V"  quoted-insert
#"C-W"  unix-word-rubout
#"C-Y"  yank
#"C-_"  vi-undo
#" "  forward-char
#"#"  insert-comment
#"$"  end-of-line
#"%"  vi-match
#"&"  vi-tilde-expand
#"*"  vi-complete
#"+"  next-history
#","  vi-char-search
#"-"  previous-history
#"."  vi-redo
#"/"  vi-search
#"0"  beginning-of-line
#"1" to "9"  vi-arg-digit
#";"  vi-char-search
#"="  vi-complete
#"?"  vi-search
#"A"  vi-append-eol
#"B"  vi-prev-word
#"C"  vi-change-to
#"D"  vi-delete-to
#"E"  vi-end-word
#"F"  vi-char-search
#"G"  vi-fetch-history
#"I"  vi-insert-beg
#"N"  vi-search-again
#"P"  vi-put
#"R"  vi-replace
#"S"  vi-subst
#"T"  vi-char-search
#"U"  revert-line
#"W"  vi-next-word
#"X"  backward-delete-char
#"Y"  vi-yank-to
#"\"  vi-complete
#"^"  vi-first-print
#"_"  vi-yank-arg
#"`"  vi-goto-mark
#"a"  vi-append-mode
#"b"  vi-prev-word
#"c"  vi-change-to
#"d"  vi-delete-to
#"e"  vi-end-word
#"f"  vi-char-search
#"h"  backward-char
#"i"  vi-insertion-mode
#"j"  next-history
#"k"  prev-history
#"l"  forward-char
#"m"  vi-set-mark
#"n"  vi-search-again
#"p"  vi-put
#"r"  vi-change-char
#"s"  vi-subst
#"t"  vi-char-search
#"u"  vi-undo
#"w"  vi-next-word
#"x"  vi-delete
#"y"  vi-yank-to
#"|"  vi-column
#"~"  vi-change-case


#########################################################################
# Dont add any stty or shopt command here. It'll block the s key!!!!!   #
#########################################################################

set mark-directories On
set horizontal-scroll-mode On
# Show extra file information when completing, like `ls -F` does
set visible-stats On
#Autocompletions with colors
set colored-stats on
#Set to vi mode by default
set editing-mode vi
#and insert mode
set keymap vi-insert
#Set vi Mode 
#set -o vi
#Show vi mode in prompt (+/:) (ins/cmd)
set show-mode-in-prompt off
#disable bell
set bell-style none
# Display matches for ambiguous patterns at first tab press
set show-all-if-ambiguous On
# Allow UTF-8 input and output, instead of showing stuff like $'\0123\0456'
set input-meta on
set output-meta on
# Para que funcionen las ñ :D 
set convert-meta off
# Show Symbolic dirs with trailing / on autocompletion
set mark-symlinked-directories on
#show autocompletions in horizontal ¿not working?
set print-completions-horizontally on
#Don't repeat partial autocompletion
set skip-completed-text on
#Replace prefixes on autocompletions larger than 3
set completion-prefix-display-length 3
#Perform file completion in a case insensitive fashion
set completion-ignore-case on
# Treat hyphens and underscores as equivalent
set completion-map-case on
# Do not autocomplete hidden files unless the pattern explicitly begins with a dot
# set match-hidden-files off
# Enable it
set match-hidden-files on

# Dont show all autocomplete results at once
set page-completions on
# If there are more than 100 possible completions for a word, ask to show them all
set completion-query-items 100



#Dont working. Lets wait for bash 4.4 ... :(
set vi-ins-mode-string \1\e[32;1m\2(ins)\1\e[0m\2
set vi-cmd-mode-string \1\e[33;1m\2(cmd)\1\e[0m\2


# Control-p:history-search-backward
# Control-n:history-search-forward

#Incremental search in history with up/down arrows
"\e[A":history-search-backward
"\e[B":history-search-forward
#Ensure left/right work properly
"\e[C":forward-char
"\e[D":backward-char

$if mode=vi

#####################
#  ON COMMAND MODE  #
#####################
set keymap vi-command

#########################
#  cut&paste kill&yank  #
#########################
#Needs work for standar clipboard/tmux/...

#same behaivour as vim
"P": yank
"p": "l\P"
#alternate kill ring
"y": yank-pop
# To work with yiw/W
"gy": vi-yank-to 

############
#  BASICS  #
############
"dd": kill-whole-line
"cc": "ddi"
"|": "A | "

#Useful
"k": history-search-backward
"j": history-search-forward

#############
#  Extras c #
#############
#Give me a bash Variable
"gv": "lmtbi${\eea}\e`tl"
#Give me a bash Array
"ga": "bi${\eea[]}\ehi"
#Give me an Echo
"ge": "iecho \"\"\ei"


"gg": beginning-of-history
"G": end-of-history


####################
#  ON INSERT MODE  #
####################
set keymap vi-insert

#Go back in history and replay step one by one ... :)
Control-o: operate-and-get-next

Control-l: clear-screen
Control-b: beginning-of-line
Control-e: end-of-line
#Same than TAB but put the completion on the cli (inline)
#breaks tab completion ¿?
#Control-Tab: menu-complete
#Complete filename against complete history!
# but should work with substrings :(
Control-n: dynamic-complete-history
#for dynamic-complete-history but with menu-complete (inline)
#Control-n: dabbrev-expand

#Search current command line from history
#much better than the typical Control-r/Control-s
"\e[A": history-search-backward
"\e[B": history-search-forward
#search for the first match (not interesting)
#M-p: non-incremental-reverse-search-history
#M-n: non-incremental-forward-search-history

#############
#  Extras i #
#############
#Better than escape
Control-P: "\el"
#Insert prior argument (by default) to: mv somelargefile ##
# but also to: ls somelargefile other !#:1
"##": "!#:$"

# \e is Alt/M- for keybindings
"\ecc": complete-command
"\ech": complete-hostname
"\ecf": complete-filename 
"\ecu": complete-username
"\ecv": complete-variable 
# complete filename and put into braces
"\ecb": complete-into-braces 

$endif
